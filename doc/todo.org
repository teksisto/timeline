#+TODO: ADD FIX REF ERR | DONE REJECT

* Сделать
** DONE Отображение таймлайна с категориями
** DONE Фильтр по источникам
** DONE Фильтр по категориям
** DONE Починить группировку по годам
** DONE Категории для источников
** DONE Фильтр по категориям событиях - добавить optgroup
** DONE Добавить корневые категории для событий и источников
** DONE Переверстать фильтры - сделать категории вертикальными
** DONE Добавление события в множество категорий
** DONE select2 для категорий
** DONE Добавление даты как интервала
** DONE Обратный отсчет
** DONE Убрать Toc, прикрутить все к Source
** DONE Ошибка когда в категории нет событий
** DONE Группировать по странам, а не по их подкатегориям
** DONE anchor.js для секций
   [[https://github.com/bryanbraun/anchorjs]]
** DONE events/filter - не группировать по странам
** FIX item[type=background] игнорирует height
** FIX Уменьшение размера цитат в презентациях

   [[https://github.com/jquery-textfill/jquery-textfill]]

** REF Переименовать Source в Section
** REF Перенести events/fullscreen/vis в events/vis
** REF Сделать layouts/empty
** ADD При добавлении в категорию, событие попадает по все родительские
** ADD Добавление комментариев к конспектам
** ADD Событие: множество цитат, множество категорий
** ADD Человек: множество цитат, множество событий, множество категорий
** ADD При добавлении потусов добавлять Person
** ADD Объединить в категориях поля значок и цвет
** ADD Фильтр по источникам в событиях - добавить иконки
** ADD Картинки для источников
** ADD Прикрутить devise
** ADD Добавить для пользователя настройку "тема"
** ADD Добавить для пользователя настройку "язык"
** REJECT Маркдаун для описаний
* Подумать
** Подсветка слов

   http://julian.com/research/blast/

   [[http://greensock.com/SplitText]]

   [[http://api.rubyonrails.org/classes/ActionView/Helpers/TextHelper.html#method-i-highlight][highlight(text, phrases, options = {})]] 

** Countdown

   В рельсах есть встроенная функция:

   : distance_of_time_in_words(Time.now, Time.local(2010, 12, 25))

** Polymorphic eager loading

   : Address.includes(:addressable)

   This will execute one query to load the addresses and load the
   addressables with *one query per addressable type*. For example if
   all the addressables are either of class Person or Company then a
   total of 3 queries will be executed. The list of addressable types
   to load is determined on the back of the addresses loaded. This is
   not supported if Active Record has to fallback to the previous
   implementation of eager loading and will raise
   ActiveRecord::EagerLoadPolymorphicError. The reason is that the
   parent model's type is a column value so its corresponding table
   name cannot be put in the FROM/JOIN clauses of that query.

   [[http://api.rubyonrails.org/classes/ActiveRecord/Associations/ClassMethods.html][api.rubyonrails.com]]

** Импорт html
   
   And finally, the “Hello World” of e-books, Alice's Adventures In Wonderland

   : repub -x 'title:body/h1' -x 'toc://table' -x 'toc_item://tr' -X '//pre' -X '//hr' -X '//body/h4' \
   : http://www.gutenberg.org/files/11/11-h/11-h.htm

   eeepub выдает ошибку при генерации примера и не указывает в гемспеке, что хочет библиотеку zip

** Цветовая схема
*** Отображение цветов при выборе двух категорий
*** Автоматическая генерация нового цвета
*** Отображение таймлайна со смешиванием цветов
   
